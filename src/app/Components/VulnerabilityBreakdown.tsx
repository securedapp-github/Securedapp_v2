import React from 'react';
import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';
import { motion } from 'framer-motion';
import 'react-circular-progressbar/dist/styles.css';

// Define the props type for vulnerabilities
type VulnerabilityBreakdownProps = {
  totalVulnerabilities: number;
  critical: number;
  high: number;
  medium: number;
  low: number;
  informational: number;
  gas: number;
};

const VulnerabilityBreakdown: React.FC<VulnerabilityBreakdownProps> = ({
  totalVulnerabilities,
  critical,
  high,
  medium,
  low,
  informational,
  gas,
}) => {
  const vulnerabilityData = [
    { label: 'Critical', count: critical, color: '#ff4d4f' }, // Red
    { label: 'High', count: high, color: '#ff7a45' }, // Orange
    { label: 'Medium', count: medium, color: '#ffa940' }, // Yellow
    { label: 'Low', count: low, color: '#12D576' }, // Green
    { label: 'Informational', count: informational, color: '#2db7f5' }, // Blue
    { label: 'Gas', count: gas, color: '#8c8c8c' }, // Gray
  ];

  return (
    <div className="flex flex-col items-center justify-center text-white">
      {/* Circular Progress Bar */}
      <motion.div
        initial={{ scale: 0.9 }}
        animate={{ scale: 1 }}
        transition={{ duration: 0.5, ease: 'easeInOut' }}
      >
        <CircularProgressbar
          value={totalVulnerabilities}
          maxValue={totalVulnerabilities}
          text={`${totalVulnerabilities} Total Vulnerabilities`}
          styles={buildStyles({
            pathColor: '#12D576', // Change this dynamically based on conditions
            textColor: '#1E90FF',
            trailColor: '#d6d6d6',
            textSize: '22px',
          })}
        />
      </motion.div>

      {/* Vulnerability Legends */}
      <div className="flex flex-col mt-5">
        {vulnerabilityData.map((vuln, idx) => (
          <div key={idx} className="flex items-center gap-2 mb-2">
            {/* Colored Circle */}
            <div
              className="w-4 h-4 rounded-full"
              style={{ backgroundColor: vuln.color }}
            ></div>
            <p className="text-lg">{`${vuln.label}: ${vuln.count}`}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default VulnerabilityBreakdown;
