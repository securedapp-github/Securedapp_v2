export const vulnerabilityData = [
  {
    Detector: "abiencoderv2-array",
    "What it Detects": "Storage abiencoderv2 array",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "arbitrary-send-erc20",
    "What it Detects": "transferFrom uses arbitrary from",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "array-by-reference",
    "What it Detects": "Modifying storage array by value",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "encode-packed-collision",
    "What it Detects": "ABI encodePacked Collision",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "incorrect-shift",
    "What it Detects":
      "The order of parameters in a shift instruction is incorrect.",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "multiple-constructors",
    "What it Detects": "Multiple constructor schemes",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "name-reused",
    "What it Detects": "Contract's name reused",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "protected-vars",
    "What it Detects": "Detected unprotected variables",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "public-mappings-nested",
    "What it Detects": "Public mappings with nested variables",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "rtlo",
    "What it Detects": "Right-To-Left-Override control character is used",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "shadowing-state",
    "What it Detects": "State variables shadowing",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "suicidal",
    "What it Detects": "Functions allowing anyone to destruct the contract",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "uninitialized-state",
    "What it Detects": "Uninitialized state variables",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "uninitialized-storage",
    "What it Detects": "Uninitialized storage variables",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "unprotected-upgrade",
    "What it Detects": "Unprotected upgradeable contract",
    Impact: "High",
    Confidence: "High",
  },
  {
    Detector: "codex",
    "What it Detects": "Use Codex to find vulnerabilities.",
    Impact: "High",
    Confidence: "Low",
  },
  {
    Detector: "arbitrary-send-erc20-permit",
    "What it Detects": "transferFrom uses arbitrary from with permit",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "arbitrary-send-eth",
    "What it Detects": "Functions that send Ether to arbitrary destinations",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "controlled-array-length",
    "What it Detects": "Tainted array length assignment",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "controlled-delegatecall",
    "What it Detects": "Controlled delegatecall destination",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "delegatecall-loop",
    "What it Detects": "Payable functions using delegatecall inside a loop",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "incorrect-exp",
    "What it Detects": "Incorrect exponentiation",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "incorrect-return",
    "What it Detects": "If a return is incorrectly used in assembly mode.",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "msg-value-loop",
    "What it Detects": "msg.value inside a loop",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "reentrancy-eth",
    "What it Detects": "Reentrancy vulnerabilities (theft of ethers)",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "return-leave",
    "What it Detects": "If a return is used instead of a leave.",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "storage-array",
    "What it Detects": "Signed storage integer array compiler bug",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "unchecked-transfer",
    "What it Detects": "Unchecked tokens transfer",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "weak-prng",
    "What it Detects": "Weak PRNG",
    Impact: "High",
    Confidence: "Medium",
  },
  {
    Detector: "domain-separator-collision",
    "What it Detects":
      "Detects ERC20 tokens that have a function whose signature collides with EIP-2612's DOMAIN_SEPARATOR()",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "enum-conversion",
    "What it Detects": "Detect dangerous enum conversion",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "erc20-interface",
    "What it Detects": "Incorrect ERC20 interfaces",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "erc721-interface",
    "What it Detects": "Incorrect ERC721 interfaces",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "incorrect-equality",
    "What it Detects": "Dangerous strict equalities",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "locked-ether",
    "What it Detects": "Contracts that lock ether",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "mapping-deletion",
    "What it Detects": "Deletion on mapping containing a structure",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "shadowing-abstract",
    "What it Detects": "State variables shadowing from abstract contracts",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "tautological-compare",
    "What it Detects":
      "Comparing a variable to itself always returns true or false, depending on comparison",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "tautology",
    "What it Detects": "Tautology or contradiction",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "write-after-write",
    "What it Detects": "Unused write",
    Impact: "Medium",
    Confidence: "High",
  },
  {
    Detector: "boolean-cst",
    "What it Detects": "Misuse of Boolean constant",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "constant-function-asm",
    "What it Detects": "Constant functions using assembly code",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "constant-function-state",
    "What it Detects": "Constant functions changing the state",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "divide-before-multiply",
    "What it Detects": "Imprecise arithmetic operations order",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "out-of-order-retryable",
    "What it Detects": "Out-of-order retryable transactions",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "reentrancy-no-eth",
    "What it Detects": "Reentrancy vulnerabilities (no theft of ethers)",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "reused-constructor",
    "What it Detects": "Reused base constructor",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "tx-origin",
    "What it Detects": "Dangerous usage of tx.origin",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "unchecked-lowlevel",
    "What it Detects": "Unchecked low-level calls",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "unchecked-send",
    "What it Detects": "Unchecked send",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "uninitialized-local",
    "What it Detects": "Uninitialized local variables",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "unused-return",
    "What it Detects": "Unused return values",
    Impact: "Medium",
    Confidence: "Medium",
  },
  {
    Detector: "incorrect-modifier",
    "What it Detects": "Modifiers that can return the default value",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "shadowing-builtin",
    "What it Detects": "Built-in symbol shadowing",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "shadowing-local",
    "What it Detects": "Local variables shadowing",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "uninitialized-fptr-cst",
    "What it Detects": "Uninitialized function pointer calls in constructors",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "variable-scope",
    "What it Detects": "Local variables used prior their declaration",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "void-cst",
    "What it Detects": "Constructor called not implemented",
    Impact: "Low",
    Confidence: "High",
  },
  {
    Detector: "calls-loop",
    "What it Detects": "Multiple calls in a loop",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "events-access",
    "What it Detects": "Missing Events Access Control",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "events-maths",
    "What it Detects": "Missing Events Arithmetic",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "incorrect-unary",
    "What it Detects": "Dangerous unary expressions",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "missing-zero-check",
    "What it Detects": "Missing Zero Address Validation",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "reentrancy-benign",
    "What it Detects": "Benign reentrancy vulnerabilities",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "reentrancy-events",
    "What it Detects":
      "Reentrancy vulnerabilities leading to out-of-order Events",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "return-bomb",
    "What it Detects":
      "A low level callee may consume all callers gas unexpectedly.",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "timestamp",
    "What it Detects": "Dangerous usage of block.timestamp",
    Impact: "Low",
    Confidence: "Medium",
  },
  {
    Detector: "assembly",
    "What it Detects": "Assembly usage",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "assert-state-change",
    "What it Detects": "Assert state change",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "boolean-equal",
    "What it Detects": "Comparison to boolean constant",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "cyclomatic-complexity",
    "What it Detects":
      "Detects functions with high (> 11) cyclomatic complexity",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "deprecated-standards",
    "What it Detects": "Deprecated Solidity Standards",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "erc20-indexed",
    "What it Detects": "Un-indexed ERC20 event parameters",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "function-init-state",
    "What it Detects": "Function initializing state variables",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "incorrect-using-for",
    "What it Detects":
      "Detects using-for statement usage when no function from a given library matches a given type",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "low-level-calls",
    "What it Detects": "Low level calls",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "missing-inheritance",
    "What it Detects": "Missing inheritance",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "naming-convention",
    "What it Detects": "Conformity to Solidity naming conventions",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "pragma",
    "What it Detects": "If different pragma directives are used",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "redundant-statements",
    "What it Detects": "Redundant statements",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "solc-version",
    "What it Detects": "Incorrect Solidity version",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "unimplemented-functions",
    "What it Detects": "Unimplemented functions",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "unused-import",
    "What it Detects": "Detects unused imports",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "unused-state",
    "What it Detects": "Unused state variables",
    Impact: "Informational",
    Confidence: "High",
  },
  {
    Detector: "costly-loop",
    "What it Detects": "Costly operations in a loop",
    Impact: "Informational",
    Confidence: "Medium",
  },
  {
    Detector: "dead-code",
    "What it Detects": "Functions that are not used",
    Impact: "Informational",
    Confidence: "Medium",
  },
  {
    Detector: "reentrancy-unlimited-gas",
    "What it Detects": "Reentrancy vulnerabilities through send and transfer",
    Impact: "Informational",
    Confidence: "Medium",
  },
  {
    Detector: "too-many-digits",
    "What it Detects": "Conformance to numeric notation best practices",
    Impact: "Informational",
    Confidence: "Medium",
  },
  {
    Detector: "cache-array-length",
    "What it Detects":
      "Detects for loops that use length member of some storage array in their loop condition and don't modify it.",
    Impact: "Optimization",
    Confidence: "High",
  },
  {
    Detector: "constable-states",
    "What it Detects": "State variables that could be declared constant",
    Impact: "Optimization",
    Confidence: "High",
  },
  {
    Detector: "external-function",
    "What it Detects": "Public function that could be declared external",
    Impact: "Optimization",
    Confidence: "High",
  },
  {
    Detector: "immutable-states",
    "What it Detects": "State variables that could be declared immutable",
    Impact: "Optimization",
    Confidence: "High",
  },
  {
    Detector: "var-read-using-this",
    "What it Detects": "Contract reads its own variable using this",
    Impact: "Optimization",
    Confidence: "High",
  },
];
